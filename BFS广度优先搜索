void BFS(int start, vector<vector<int>> &graph, unordered_set<int> &visited) {
    queue<int> q;
    q.push(start);
    visited.insert(start);
    while (!q.empty()) {
        int node = q.front();
        q.pop();
        cout << node << " "; // 遍历节点
        for (int neighbor : graph[node]) {
            if (visited.find(neighbor) == visited.end()) { // 如果邻居节点未被访问过
                q.push(neighbor); // 将其加入队列
                visited.insert(neighbor); // 标记为已访问
            }
        }
    }
}
